#!/usr/bin/perl -T
# SSH line-mode wrapper by Matija Nalis <mnalis-github@voyager.hr> GPLv3+, started 2015-09-14

use warnings;
use strict;
use autodie;
use feature 'say';

use Term::ReadLine;
use IO::Handle;
use IO::Pty::Easy; # FIXME: IO::Pty::HalfDuplex seems much nicer to me, but there is no debian package, and we want to be simple to install
use Term::ReadKey;

$ENV{'PATH'} = '/usr/local/bin:/usr/bin:/bin';
$|=1;

my $term = Term::ReadLine->new('sshlm');
my $prompt = 'SSH_LM: ';
my $OUT = $term->OUT || \*STDOUT;
my $linemode_active = 0;

ReadMode 'ultra-raw';

my $pty = IO::Pty::Easy->new ( raw => 0 );
$pty->spawn("sh");

# define filedescriptors on which we will wait
my $r_in='';
vec($r_in, fileno(STDIN), 1) = 1;
vec($r_in, $pty->fileno, 1) = 1; 


MAIN: while ($pty->is_active) {
    my $output = $pty->read(0);
    if (defined $output) {
         print $output;
         #print "[output ends]";
         last MAIN if defined($output) && $output eq '';
    }
    
    my $all_input = '';
    READKEY: while (defined (my $input = ReadKey(-1))) {
        if ($input eq  "\ce") {		# ctrl-e swithches linemode state
            $linemode_active = ! $linemode_active;
            next READKEY;		# forget hotkey (do not store in buffer)
        }
        $input = '[S]' if $input eq "\c]";
        #print "[got input]";
        #print $input;
        $all_input .= $input;
    }
    PROCESS_KEYS: while ($all_input ne '' or $linemode_active) {
        if ($all_input ne '') {
            my $chars = $pty->write($all_input, 0);
            $all_input = '';
            last MAIN if defined($chars) && $chars == 0;
        }
        
        if ($linemode_active) {
            ReadMode 'normal';	# enable local echo for readline
            $all_input = $term->readline($prompt);
            ReadMode 'ultra-raw';
            $term->addhistory($all_input) if $all_input =~ /\S/;
            $linemode_active = 0;
            $all_input .= "\n";
            next PROCESS_KEYS;
        }
    }
    
    select ($_=$r_in, undef, $_=$r_in, undef);	# infinite sleep until something comes on either on pty (output) or stdin (keyboard)
}

$pty->close;
ReadMode 'restore';
print "\n[Terminal exiting]\n";
